"use strict";(self.webpackChunkagridocs=self.webpackChunkagridocs||[]).push([[476],{9078:(e,t,n)=>{n.r(t),n.d(t,{Calculator:()=>c,assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var i=n(5893),a=n(1151),r=n(7294);const o={},s="Mutation Chance Calculator",l={id:"wiki/mutation-calculator",title:"Mutation Chance Calculator",description:"let maxFertility = 10, maxMutativity = 10;",source:"@site/docs/wiki/mutation-calculator.mdx",sourceDirName:"wiki",slug:"/wiki/mutation-calculator",permalink:"/agricraft.github.io/docs/wiki/mutation-calculator",draft:!1,unlisted:!1,editUrl:"https://github.com/AgriCraft/agricraft.github.io/tree/main/docs/wiki/mutation-calculator.mdx",tags:[],version:"current",frontMatter:{},sidebar:"wikiSidebar",previous:{title:"Frequently Asked Questions",permalink:"/agricraft.github.io/docs/wiki/faq"},next:{title:"Blocks & Items",permalink:"/agricraft.github.io/docs/block-item"}},d={};function c(){const e={br:"br",div:"div",input:"input",label:"label",p:"p",...(0,a.a)()},[t,n]=(0,r.useState)(1),[o,s]=(0,r.useState)(1),[l,d]=(0,r.useState)(1),[c,u]=(0,r.useState)(1);let h=t/10,m=l/10,p=h*m,b=o>c?o:c,x=p*(1-(1-b/10)/2),f=100*p,g=100*(2*(1-h)*h+2*(1-m)*m),v=100*x,y=100*(x*((b+10)/2/10));return(0,i.jsxs)(e.div,{children:[(0,i.jsxs)(e.div,{children:[(0,i.jsx)(e.p,{children:"Parent 1 :"}),(0,i.jsx)(e.label,{htmlFor:"p1f",children:"Fertility "}),(0,i.jsx)(e.input,{type:"number",id:"p1f",max:"10",min:"1",value:t,onChange:e=>n(parseInt(e.target.value))}),(0,i.jsx)(e.br,{}),(0,i.jsx)(e.label,{htmlFor:"p1m",children:"Mutativity "}),(0,i.jsx)(e.input,{type:"number",id:"p1m",max:"10",min:"1",value:o,onChange:e=>s(parseInt(e.target.value))})]}),(0,i.jsx)(e.br,{}),(0,i.jsxs)(e.div,{children:[(0,i.jsx)(e.p,{children:"Parent 2 :"}),(0,i.jsx)(e.label,{htmlFor:"p2f",children:"Fertility "}),(0,i.jsx)(e.input,{type:"number",id:"p2f",max:"10",min:"1",value:l,onChange:e=>d(parseInt(e.target.value))}),(0,i.jsx)(e.br,{}),(0,i.jsx)(e.label,{htmlFor:"p2m",children:"Mutativity "}),(0,i.jsx)(e.input,{type:"number",id:"p2m",max:"10",min:"1",value:c,onChange:e=>u(parseInt(e.target.value))})]}),(0,i.jsx)(e.br,{}),(0,i.jsx)(e.p,{children:"Results:"}),(0,i.jsxs)(e.p,{children:["Probability of two parents to be selected (=mutation): ",parseFloat(f.toFixed(2)),"%"]}),(0,i.jsxs)(e.p,{children:["Probability of only one parent to be selected (=clone): ",parseFloat(g.toFixed(2)),"%"]}),(0,i.jsxs)(e.p,{children:["Probability of a mutation to happen: ",parseFloat(v.toFixed(2)),"%"]}),(0,i.jsxs)(e.p,{children:["Probability of a good mutation to happen: ",parseFloat(y.toFixed(2)),"%"]})]})}const u=[{value:"Calculator",id:"calculator",level:2},{value:"How cross-breeding (and mutations) works",id:"how-cross-breeding-and-mutations-works",level:2},{value:"Clone",id:"clone",level:3},{value:"Cross-breeding",id:"cross-breeding",level:3},{value:"Mutation",id:"mutation",level:3}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"mutation-chance-calculator",children:"Mutation Chance Calculator"}),"\n","\n","\n",(0,i.jsx)(t.h2,{id:"calculator",children:"Calculator"}),"\n",(0,i.jsx)(t.p,{children:"Enter the values in the boxes below to have the result."}),"\n",(0,i.jsx)(c,{}),"\n",(0,i.jsx)(t.h2,{id:"how-cross-breeding-and-mutations-works",children:"How cross-breeding (and mutations) works"}),"\n",(0,i.jsx)(t.p,{children:"A cross-breeding is generated when a random tick happen on an empty cross cropstick.\nWhen this happens, valid neighbours are determined. A valid neighbour is a plant mature and fertile.\nThese candidates are filtered by their fertility (if the fertility of the plant is less than a random number between min-fertility and max-fertility, the plant is removed from the candidates)\nIf only one plant is remaining, a clone of this plant is produced. (see later for more explanation).\nIf more are remaining, a cross-breeding is produced."}),"\n",(0,i.jsx)(t.h3,{id:"clone",children:"Clone"}),"\n",(0,i.jsx)(t.p,{children:"A random number is generated, if it is less than the spread chance of the plant, a clone is really produced.\nWhen the clone is produced, there is a chance the genes are mutated (see later for more explanation)."}),"\n",(0,i.jsx)(t.h3,{id:"cross-breeding",children:"Cross-breeding"}),"\n",(0,i.jsx)(t.p,{children:"The detected plants are sorted by their fertility (high fertility is first), and the two first plants are chosen.\nA new plant is produced with a random allele (dominant or recessive) from each parent. A mutation may happen on each genes."}),"\n",(0,i.jsx)(t.h3,{id:"mutation",children:"Mutation"}),"\n",(0,i.jsxs)(t.p,{children:["A random mutation happen after generating a random number (between 0.0 and 1.0).\nIf it is greater than a threshold (computed by ",(0,i.jsx)(t.code,{children:"(1.0 - gene_mutativity / max_mutativity) / 2.0"}),"), the mutation happen.\nA mutation is either good (+1 is stat) or bad (-1 in stat). It is determined by another random number.\nIf ",(0,i.jsx)(t.code,{children:"random(min_mutativity, max_mutativity) < (max_mutativity + gene_mutativity)/2"})," then the mutation is good, else the mutation is bad.\nMutativity stat of 1 results in 30.25/50/24.75 probability of positive/no/negative mutation.\nMutativity stat of 10 results in 100/0/0 probability of positive/no/negative mutation."]})]})}function m(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>o});var i=n(7294);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);