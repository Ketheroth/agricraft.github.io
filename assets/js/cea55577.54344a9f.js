"use strict";(self.webpackChunkagridocs=self.webpackChunkagridocs||[]).push([[927],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>f});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=r.createContext({}),l=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=l(t.components);return r.createElement(u.Provider,{value:e},t.children)},p="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,u=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),p=l(n),d=a,f=p["".concat(u,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,i(i({ref:e},s),{},{components:n})):r.createElement(f,i({ref:e},s))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=t,c[p]="string"==typeof t?t:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3066:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},i="Mutation",c={unversionedId:"customization/mutation",id:"customization/mutation",title:"Mutation",description:"Mutations are a way to create new breeds of plants from two plants.",source:"@site/docs/customization/mutation.md",sourceDirName:"customization",slug:"/customization/mutation",permalink:"/agricraft.github.io/docs/customization/mutation",draft:!1,editUrl:"https://github.com/AgriCraft/agricraft.github.io/tree/main/docs/customization/mutation.md",tags:[],version:"current",frontMatter:{},sidebar:"customizationSidebar",previous:{title:"Plant",permalink:"/agricraft.github.io/docs/customization/plant"},next:{title:"Soil",permalink:"/agricraft.github.io/docs/customization/soil"}},u={},l=[],s={toc:l},p="wrapper";function m(t){let{components:e,...n}=t;return(0,a.kt)(p,(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mutation"},"Mutation"),(0,a.kt)("p",null,"Mutations are a way to create new breeds of plants from two plants.\nAgriCraft ships default mutations for plants (you can view the defaults ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/AgriCraft/todo-kether-fix-this"},"here"),").\nHowever, you can modify these mutations or add new ones."),(0,a.kt)("p",null,"To create your own mutation, add a new json file in the directory ",(0,a.kt)("inlineCode",{parentName:"p"},"data/<datapack_id>/agricraft/mutations/<mutation_id>.json"),"\nwhere ",(0,a.kt)("inlineCode",{parentName:"p"},"datapack_id")," is the id of your datapack and",(0,a.kt)("inlineCode",{parentName:"p"},"mutation_id")," is the id of this mutation (it can be whatever you want).\nIn our case it will be ",(0,a.kt)("inlineCode",{parentName:"p"},"tuto")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"tomato"),"."),(0,a.kt)("p",null,"There can be multiple mutation for the same plant, as long as the id of the mutation is different."),(0,a.kt)("p",null,"The json file must have the following structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json5"},'{\n    // if the mutation will be registered in the game\n    "enabled": true,\n    // mods needed for the mutation to be loaded\n    "mods": [],\n    // the chance of the mutation occurring on any given random tick, in the range [0.0, 1.0]\n    "chance": 0.75,\n    // the plant id of the child resulting of the mutation\n    "child": "tuto:tomato",\n    // the plant id of the first parent\n    "parent1": "minecraft:poppy",\n    // the plant id of the second parent\n    "parent2": "minecraft:potato"\n}\n\n')))}m.isMDXComponent=!0}}]);